/**
 * 42videobricks
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VideoMultipartUploadFinalizePartsInner from './VideoMultipartUploadFinalizePartsInner';

/**
 * The VideoMultipartUploadFinalize model module.
 * @module model/VideoMultipartUploadFinalize
 * @version 1.2.0
 */
class VideoMultipartUploadFinalize {
    /**
     * Constructs a new <code>VideoMultipartUploadFinalize</code>.
     * Video Multipart upload finalization
     * @alias module:model/VideoMultipartUploadFinalize
     * @param fileId {String} file id
     * @param fileKey {String} file key
     * @param parts {Array.<module:model/VideoMultipartUploadFinalizePartsInner>} 
     */
    constructor(fileId, fileKey, parts) { 
        
        VideoMultipartUploadFinalize.initialize(this, fileId, fileKey, parts);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileId, fileKey, parts) { 
        obj['fileId'] = fileId;
        obj['fileKey'] = fileKey;
        obj['parts'] = parts;
    }

    /**
     * Constructs a <code>VideoMultipartUploadFinalize</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoMultipartUploadFinalize} obj Optional instance to populate.
     * @return {module:model/VideoMultipartUploadFinalize} The populated <code>VideoMultipartUploadFinalize</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoMultipartUploadFinalize();

            if (data.hasOwnProperty('fileId')) {
                obj['fileId'] = ApiClient.convertToType(data['fileId'], 'String');
            }
            if (data.hasOwnProperty('fileKey')) {
                obj['fileKey'] = ApiClient.convertToType(data['fileKey'], 'String');
            }
            if (data.hasOwnProperty('parts')) {
                obj['parts'] = ApiClient.convertToType(data['parts'], [VideoMultipartUploadFinalizePartsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoMultipartUploadFinalize</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoMultipartUploadFinalize</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoMultipartUploadFinalize.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fileId'] && !(typeof data['fileId'] === 'string' || data['fileId'] instanceof String)) {
            throw new Error("Expected the field `fileId` to be a primitive type in the JSON string but got " + data['fileId']);
        }
        // ensure the json data is a string
        if (data['fileKey'] && !(typeof data['fileKey'] === 'string' || data['fileKey'] instanceof String)) {
            throw new Error("Expected the field `fileKey` to be a primitive type in the JSON string but got " + data['fileKey']);
        }
        if (data['parts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parts'])) {
                throw new Error("Expected the field `parts` to be an array in the JSON data but got " + data['parts']);
            }
            // validate the optional field `parts` (array)
            for (const item of data['parts']) {
                VideoMultipartUploadFinalizePartsInner.validateJSON(item);
            };
        }

        return true;
    }


}

VideoMultipartUploadFinalize.RequiredProperties = ["fileId", "fileKey", "parts"];

/**
 * file id
 * @member {String} fileId
 */
VideoMultipartUploadFinalize.prototype['fileId'] = undefined;

/**
 * file key
 * @member {String} fileKey
 */
VideoMultipartUploadFinalize.prototype['fileKey'] = undefined;

/**
 * @member {Array.<module:model/VideoMultipartUploadFinalizePartsInner>} parts
 */
VideoMultipartUploadFinalize.prototype['parts'] = undefined;






export default VideoMultipartUploadFinalize;

