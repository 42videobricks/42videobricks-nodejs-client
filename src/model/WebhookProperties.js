/**
 * 42videobricks
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookProperties model module.
 * @module model/WebhookProperties
 * @version 1.2.0
 */
class WebhookProperties {
    /**
     * Constructs a new <code>WebhookProperties</code>.
     * Webhook properties object
     * @alias module:model/WebhookProperties
     * @param url {String} Url of the application wich is receiving Notifications
     * @param eventType {Array.<module:model/WebhookProperties.EventTypeEnum>} List of event to be notified:   * VIDEO_STATUS: Get Video object status modification notifications   Status values: REQUESTED, CREATED, TRANSCODING, TRANSCODING_ERROR, AVAILABLE, DELETED   * VIDEO_TRANSCODING_PROGRESS: Get transcoding progression notifications
     */
    constructor(url, eventType) { 
        
        WebhookProperties.initialize(this, url, eventType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url, eventType) { 
        obj['url'] = url;
        obj['eventType'] = eventType;
    }

    /**
     * Constructs a <code>WebhookProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookProperties} obj Optional instance to populate.
     * @return {module:model/WebhookProperties} The populated <code>WebhookProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookProperties();

            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('eventType')) {
                obj['eventType'] = ApiClient.convertToType(data['eventType'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookProperties</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookProperties.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['eventType'])) {
            throw new Error("Expected the field `eventType` to be an array in the JSON data but got " + data['eventType']);
        }

        return true;
    }


}

WebhookProperties.RequiredProperties = ["url", "eventType"];

/**
 * Url of the application wich is receiving Notifications
 * @member {String} url
 */
WebhookProperties.prototype['url'] = undefined;

/**
 * Optionnal Secret token to validate notifications. Sent with the request in the X-Vpass-Token HTTP header.
 * @member {String} token
 */
WebhookProperties.prototype['token'] = undefined;

/**
 * List of event to be notified:   * VIDEO_STATUS: Get Video object status modification notifications   Status values: REQUESTED, CREATED, TRANSCODING, TRANSCODING_ERROR, AVAILABLE, DELETED   * VIDEO_TRANSCODING_PROGRESS: Get transcoding progression notifications
 * @member {Array.<module:model/WebhookProperties.EventTypeEnum>} eventType
 */
WebhookProperties.prototype['eventType'] = undefined;





/**
 * Allowed values for the <code>eventType</code> property.
 * @enum {String}
 * @readonly
 */
WebhookProperties['EventTypeEnum'] = {

    /**
     * value: "VIDEO_STATUS"
     * @const
     */
    "STATUS": "VIDEO_STATUS",

    /**
     * value: "VIDEO_TRANSCODING_PROGRESS"
     * @const
     */
    "TRANSCODING_PROGRESS": "VIDEO_TRANSCODING_PROGRESS"
};



export default WebhookProperties;

