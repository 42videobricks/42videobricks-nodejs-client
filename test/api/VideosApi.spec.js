/**
 * 42videobricks
 * 42videobricks is a Video Platform As A Service (VPaaS)
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Api42Vb);
  }
}(this, function(expect, Api42Vb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Api42Vb.VideosApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VideosApi', function() {
    describe('addAttachmentByVideoId', function() {
      it('should call addAttachmentByVideoId successfully', function(done) {
        //uncomment below and update the code to test addAttachmentByVideoId
        //instance.addAttachmentByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addThumbnailByVideoId', function() {
      it('should call addThumbnailByVideoId successfully', function(done) {
        //uncomment below and update the code to test addThumbnailByVideoId
        //instance.addThumbnailByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideo', function() {
      it('should call addVideo successfully', function(done) {
        //uncomment below and update the code to test addVideo
        //instance.addVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAttachmentByVideoId', function() {
      it('should call deleteAttachmentByVideoId successfully', function(done) {
        //uncomment below and update the code to test deleteAttachmentByVideoId
        //instance.deleteAttachmentByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteThumbnailByVideoId', function() {
      it('should call deleteThumbnailByVideoId successfully', function(done) {
        //uncomment below and update the code to test deleteThumbnailByVideoId
        //instance.deleteThumbnailByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoById', function() {
      it('should call deleteVideoById successfully', function(done) {
        //uncomment below and update the code to test deleteVideoById
        //instance.deleteVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('finalizeMultipartUploadVideoById', function() {
      it('should call finalizeMultipartUploadVideoById successfully', function(done) {
        //uncomment below and update the code to test finalizeMultipartUploadVideoById
        //instance.finalizeMultipartUploadVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('finalizeUploadVideoById', function() {
      it('should call finalizeUploadVideoById successfully', function(done) {
        //uncomment below and update the code to test finalizeUploadVideoById
        //instance.finalizeUploadVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentByVideoId', function() {
      it('should call getAttachmentByVideoId successfully', function(done) {
        //uncomment below and update the code to test getAttachmentByVideoId
        //instance.getAttachmentByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentFileByVideoId', function() {
      it('should call getAttachmentFileByVideoId successfully', function(done) {
        //uncomment below and update the code to test getAttachmentFileByVideoId
        //instance.getAttachmentFileByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttachmentsByVideoId', function() {
      it('should call getAttachmentsByVideoId successfully', function(done) {
        //uncomment below and update the code to test getAttachmentsByVideoId
        //instance.getAttachmentsByVideoId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideoById', function() {
      it('should call getVideoById successfully', function(done) {
        //uncomment below and update the code to test getVideoById
        //instance.getVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVideos', function() {
      it('should call getVideos successfully', function(done) {
        //uncomment below and update the code to test getVideos
        //instance.getVideos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('initMultipartUploadVideoById', function() {
      it('should call initMultipartUploadVideoById successfully', function(done) {
        //uncomment below and update the code to test initMultipartUploadVideoById
        //instance.initMultipartUploadVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('initUploadVideoById', function() {
      it('should call initUploadVideoById successfully', function(done) {
        //uncomment below and update the code to test initUploadVideoById
        //instance.initUploadVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVideoById', function() {
      it('should call updateVideoById successfully', function(done) {
        //uncomment below and update the code to test updateVideoById
        //instance.updateVideoById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
